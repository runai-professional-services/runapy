from typing import Optional, List
from datetime import datetime

from runai import models
from runai.api.runai_api_service import RunaiAPIService, deprecated_message


class JobsApi(RunaiAPIService):
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None):
        self._api_client = api_client

    @deprecated_message()
    def get_cluster_jobs_count(
        self,
        uuid: str,
        node_id: Optional[str] = None,
        filter: Optional[str] = None,
    ):
        r"""
        ## Deprecated endpoint, consider alternative method

        ### Description
        Return the number all Jobs in the cluster. Deprecated - please use api/v1/workloads/count instead

        ### Parameters:
        ```python
        uuid: str
        node_id: Optional[str]
        filter: Optional[str]
        ```
        uuid: Unique identifier of the cluster
        node_id: Unique identifier of the node.
        filter: See model str for more information.

        ### Example:
        ```python
        JobsApi(
            uuid='uuid_example',
                        node_id='node_id_example',
                        filter='filter_example'
        )
        ```
        """

        # Query params:
        query_params = [
            ("nodeId", node_id),
            ("filter", filter),
        ]
        resource_path = f"/v1/k8s/clusters/{uuid}/jobs/count".replace("_", "-")
        method = "GET"
        return self._api_client.call_api(
            resource_path=resource_path, method=method, query_params=query_params
        )

    @deprecated_message()
    def get_pods_by_job_id(
        self,
        job_id: str,
        uuid: str,
        id: Optional[str] = None,
        pod_id: Optional[str] = None,
        pod_group_id: Optional[str] = None,
        node_id: Optional[str] = None,
        name: Optional[str] = None,
        status: Optional[str] = None,
    ):
        r"""
        ## Deprecated endpoint, consider alternative method

        ### Description
        Get all pods that are associated for a specific job. Deprecated - please use api/v1/workloads/{workloadId}/pods instead

        ### Parameters:
        ```python
        job_id: str
        uuid: str
        id: Optional[str]
        pod_id: Optional[str]
        pod_group_id: Optional[str]
        node_id: Optional[str]
        name: Optional[str]
        status: Optional[str]
        ```
        job_id: Unique identifier of the job (UUID)
        uuid: Unique identifier of the cluster
        id: id
        pod_id: Unique identifier of the pod.
        pod_group_id: Identifier of the pod group.
        node_id: Unique identifier of the node.
        name: The name of the job.
        status: The status of the job.

        ### Example:
        ```python
        JobsApi(
            job_id='job_id_example',
                        uuid='uuid_example',
                        id='id_example',
                        pod_id='pod_id_example',
                        pod_group_id='pod_group_id_example',
                        node_id='node_id_example',
                        name='name_example',
                        status='status_example'
        )
        ```
        """

        # Query params:
        query_params = [
            ("id", id),
            ("podId", pod_id),
            ("podGroupId", pod_group_id),
            ("nodeId", node_id),
            ("name", name),
            ("status", status),
        ]
        resource_path = f"/v1/k8s/clusters/{uuid}/jobs/{job_id}/pods".replace("_", "-")
        method = "GET"
        return self._api_client.call_api(
            resource_path=resource_path, method=method, query_params=query_params
        )

    @deprecated_message()
    def list_jobs(
        self,
        uuid: str,
        node_id: Optional[str] = None,
        filter: Optional[str] = None,
        sort_by: Optional[str] = None,
        sort_direction: Optional[str] = None,
        var_from: Optional[float] = None,
        limit: Optional[float] = None,
        include_deleted: Optional[bool] = None,
    ):
        r"""
        ## Deprecated endpoint, consider alternative method

        ### Description
        List all Jobs in the cluster. Deprecated - please use api/v1/workloads instead

        ### Parameters:
        ```python
        uuid: str
        node_id: Optional[str]
        filter: Optional[str]
        sort_by: Optional[str]
        sort_direction: Optional[str]
        var_from: Optional[float]
        limit: Optional[float]
        include_deleted: Optional[bool]
        ```
        uuid: Unique identifier of the cluster
        node_id: Unique identifier of the node.
        filter: See model str for more information.
        sort_by: Order of the results.
        sort_direction: See model str for more information.
        var_from: Start the response from a given number of result. Used along with &#39;limit&#39; to retrieve the results paginated.
        limit: Limit the response to a given number of results.
        include_deleted: True to include deleted jobs in the result. - Default: True

        ### Example:
        ```python
        JobsApi(
            uuid='uuid_example',
                        node_id='node_id_example',
                        filter='filter_example',
                        sort_by='sort_by_example',
                        sort_direction='sort_direction_example',
                        var_from=3.4,
                        limit=3.4,
                        include_deleted=True
        )
        ```
        """

        # Query params:
        query_params = [
            ("nodeId", node_id),
            ("filter", filter),
            ("sortBy", sort_by),
            ("sortDirection", sort_direction),
            ("varFrom", var_from),
            ("limit", limit),
            ("includeDeleted", include_deleted),
        ]
        resource_path = f"/v1/k8s/clusters/{uuid}/jobs".replace("_", "-")
        method = "GET"
        return self._api_client.call_api(
            resource_path=resource_path, method=method, query_params=query_params
        )
