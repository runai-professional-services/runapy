# coding: utf-8

"""
Run:ai API

# Introduction  The Run:ai Control-Plane API reference is a guide that provides an easy-to-use programming interface for adding various tasks to your application, including workload submission, resource management, and administrative operations.  Run:ai APIs are accessed using *bearer tokens*. To obtain a token, you need to create an **Application** through the Run:ai user interface. To create an application, in your UI, go to `Settings & Tools`, `Application` and create a new Application.  After you have created a new application, you will need to assign it access rules. To assign access rules to the application, see [Create access rules](https://docs.run.ai/latest/admin/runai-setup/access-control/rbac/?h=create+delete+app#create-or-delete-rules). Make sure you assign the correct rules to your application. Use the [Roles](https://docs.run.ai/latest/admin/runai-setup/access-control/rbac/?h=create+delete+app#roles) to assign the correct access rules.  To get your access token, follow the instructions in [Request a token](https://docs.run.ai/latest/developer/rest-auth/#request-an-api-token).

The version of the OpenAPI document: latest
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import json
from enum import Enum
from typing_extensions import Self


class PriorityClass(str, Enum):
    """
    Priority class of the workload. The default value for workspace is 'build' and it can be changed to 'interactive-preemptible' to allow the workload to use over-quota resources. The default value for training is 'train' and it can be changed to 'build' to allow the training workload to have a higher priority for in-queue scheduling and also become non-preemptive (if it's in deserved quota)..

    Allowed enum values:

    BUILD = 'build'

    TRAIN = 'train'

    INTERACTIVE_MINUS_PREEMPTIBLE = 'interactive-preemptible'


    Example:
        ```python
        PriorityClass.BUILD
        PriorityClass.TRAIN
        PriorityClass.INTERACTIVE_MINUS_PREEMPTIBLE
        ```
    """

    BUILD = "build"
    TRAIN = "train"
    INTERACTIVE_MINUS_PREEMPTIBLE = "interactive-preemptible"

    @classmethod
    def from_json(cls, json_str: str) -> Self:
        """Create an instance of PriorityClass from a JSON string"""
        return cls(json.loads(json_str))
