# coding: utf-8

"""
    Runai API

    # Introduction  The Run:AI Control-Plane API reference is a guide that provides an easy-to-use programming interface for adding various tasks to your application, including workload submission, resource management, and administrative operations.  Run:ai APIs are accessed using *bearer tokens*. To obtain a token, you need to create an **Application** through the Run:ai user interface. To create an application, in your UI, go to `Settings & Tools`, `Application` and create a new Application.  After you have created a new application, you will need to assign it access rules. To assign access rules to the application, see [Create access rules](https://docs.run.ai/latest/admin/runai-setup/access-control/rbac/?h=create+delete+app#create-or-delete-rules). Make sure you assign the correct rules to your application. Use the [Roles](https://docs.run.ai/latest/admin/runai-setup/access-control/rbac/?h=create+delete+app#roles) to assign the correct access rules.  To get your access token, follow the instructions in [Request a token](https://docs.run.ai/latest/developer/rest-auth/#request-an-api-token). 

    The version of the OpenAPI document: 2.18
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from runai.api.applications_api import ApplicationsApi


class TestApplicationsApi(unittest.TestCase):
    """ApplicationsApi unit test stubs"""

    def setUp(self) -> None:
        self.api = ApplicationsApi()

    def tearDown(self) -> None:
        pass

    def test_create_application(self) -> None:
        """Test case for create_application

        Create a new app.
        """
        pass

    def test_create_application_0(self) -> None:
        """Test case for create_application_0

        Create an application.
        """
        pass

    def test_delete_application_by_id(self) -> None:
        """Test case for delete_application_by_id

        Delete a App.
        """
        pass

    def test_delete_application_by_id_0(self) -> None:
        """Test case for delete_application_by_id_0

        Delete an application by id.
        """
        pass

    def test_get_application_by_id(self) -> None:
        """Test case for get_application_by_id

        Get app details.
        """
        pass

    def test_get_application_by_id_0(self) -> None:
        """Test case for get_application_by_id_0

        Get application by id.
        """
        pass

    def test_get_applications(self) -> None:
        """Test case for get_applications

        Get Apps list.
        """
        pass

    def test_get_applications_0(self) -> None:
        """Test case for get_applications_0

        Get a list of applications.
        """
        pass

    def test_get_installer_app(self) -> None:
        """Test case for get_installer_app

        Get a list of installer applications.
        """
        pass

    def test_regenerate_application_secret(self) -> None:
        """Test case for regenerate_application_secret

        Regenerate an application secret.
        """
        pass

    def test_reset_app_secret(self) -> None:
        """Test case for reset_app_secret

        Re-generate secret of application.
        """
        pass

    def test_update_application_by_id(self) -> None:
        """Test case for update_application_by_id

        Update app details.
        """
        pass

    def test_update_application_by_id_0(self) -> None:
        """Test case for update_application_by_id_0

        Update application details by id.
        """
        pass


if __name__ == "__main__":
    unittest.main()
