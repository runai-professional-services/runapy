# coding: utf-8

"""
Runai API

# Introduction  The Run:AI Control-Plane API reference is a guide that provides an easy-to-use programming interface for adding various tasks to your application, including workload submission, resource management, and administrative operations.  Run:ai APIs are accessed using *bearer tokens*. To obtain a token, you need to create an **Application** through the Run:ai user interface. To create an application, in your UI, go to `Settings & Tools`, `Application` and create a new Application.  After you have created a new application, you will need to assign it access rules. To assign access rules to the application, see [Create access rules](https://docs.run.ai/latest/admin/runai-setup/access-control/rbac/?h=create+delete+app#create-or-delete-rules). Make sure you assign the correct rules to your application. Use the [Roles](https://docs.run.ai/latest/admin/runai-setup/access-control/rbac/?h=create+delete+app#roles) to assign the correct access rules.  To get your access token, follow the instructions in [Request a token](https://docs.run.ai/latest/developer/rest-auth/#request-an-api-token).

The version of the OpenAPI document: 2.19
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501


import unittest

from runai.api.workloads_api import WorkloadsApi


class TestWorkloadsApi(unittest.TestCase):
    """WorkloadsApi unit test stubs"""

    def setUp(self) -> None:
        self.api = WorkloadsApi()

    def tearDown(self) -> None:
        pass

    def test_count_workloads(self) -> None:
        """Test case for count_workloads

        Count workloads.
        """
        pass

    def test_get_workload(self) -> None:
        """Test case for get_workload

        Get a workload.
        """
        pass

    def test_get_workload_metrics(self) -> None:
        """Test case for get_workload_metrics

        Get workload metrics data. [Experimental]
        """
        pass

    def test_get_workloads(self) -> None:
        """Test case for get_workloads

        List workloads.
        """
        pass

    def test_get_workloads_telemetry(self) -> None:
        """Test case for get_workloads_telemetry

        Get the workloads telemetry. [Experimental]
        """
        pass


if __name__ == "__main__":
    unittest.main()
